generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "prismaSchemaFolder"]
  output = "../generated/client"
}

datasource db {
  relationMode = "prisma"
  provider     = "postgresql"
  url          = env("DATABASE_URL")
}


// Models from 'ai.prisma'


model Provider {
    id        String    @id @default(uuid())
    name      String    @unique
    baseUrl   String
    apiKey    String // Encrypted with AWS KMS
    models    AIModel[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model AIModel {
    id          String      @id @default(uuid())
    externalId  String // Original provider ID (e.g., "llama3.1-8b")
    provider    Provider    @relation(fields: [providerId], references: [id])
    providerId  String
    name        String?
    owner       String?
    parameters  BigInt? // 70000000000 for 70B model
    inputCost   Float // USD per 1M tokens
    outputCost  Float // USD per 1M tokens
    created     DateTime // From provider's timestamp
    lastFetched DateTime    @updatedAt
    errorCount  Int         @default(0)
    status      ModelStatus @default(OPERATIONAL)
    siblings    AIModel[]   @relation("ModelSiblings")
    siblingOf   AIModel[]   @relation("ModelSiblings")

    @@unique([providerId, externalId])
}

model APIKey {
    id         String     @id @default(uuid())
    key        String     @unique // Hashed value of undrstnd_{random32}
    name       String?
    tier       ApiKeyTier @default(FREE)
    userId     String? // Optional link to a user
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    lastUsedAt DateTime?
    rateLimit  Int // Requests per hour
    isRevoked  Boolean    @default(false)
}

model RequestLog {
    id           String   @id @default(uuid())
    apiKeyId     String?
    modelId      String?
    endpoint     String
    statusCode   Int
    duration     Int // In milliseconds
    inputTokens  Int?
    outputTokens Int?
    timestamp    DateTime @default(now())
}


// Models from 'auth.prisma'
/**
 * Represents a waitlist.
 * @property id - Unique identifier for the waitlist entry. Type: String. Generated using cuid().
 * @property email - Email address of the user. Type: String. Must be unique.
 * @property country - Country of the user. Type: String. Optional.
 * @property city - City of the user. Type: String. Optional.
 * @property ip - IP address of the user. Type: String. Optional.
 * @property joinedAt - Timestamp when the user joined the waitlist. Type: DateTime. Optional.
 * @property createdAt - Timestamp when the waitlist entry was created. Type: DateTime. Defaults to current time.
 */
model Waitlist {
  id    String @id @default(cuid())
  email String @unique

  country  String?
  city     String?
  ip       String?
  joinedAt DateTime?

  createdAt DateTime @default(now())

  @@map("waitlist")
}


// Models from 'cron.prisma'
// This is a stub model.
// Delete it and add your own Prisma models.
model Page {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime @default(now())
}


// Models from 'enum.prisma'
enum ModelStatus {
    OPERATIONAL
    DEGRADED
    MAINTENANCE
}

enum ApiKeyTier {
    FREE
    PRO
    ENTERPRISE
}

